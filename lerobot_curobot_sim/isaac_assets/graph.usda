#usda 1.0
(
    defaultPrim = "Root"
    upAxis = "Z"
)

def Xform "Root"
{
    def OmniGraph "ROS_JointStates"
    {
        token evaluationMode = "Automatic"
        token evaluator:type = "execution"
        token fabricCacheBacking = "Shared"
        int2 fileFormatVersion = (1, 9)
        token pipelineStage = "pipelineStageSimulation"
        token ui:displayGroup = "Material Graphs"
        token ui:displayName = "ROS_JointStates"
        int ui:order = 1024
        uniform token[] xformOpOrder = []

        def OmniGraphNode "OnPlaybackTick"
        {
            token node:type = "omni.graph.action.OnPlaybackTick"
            int node:typeVersion = 2
            custom double outputs:deltaSeconds
            custom double outputs:frame
            custom uint outputs:tick (
                customData = {
                    bool isExecution = 1
                }
            )
            custom double outputs:time
        }

        def OmniGraphNode "Context"
        {
            custom uchar inputs:domain_id
            custom bool inputs:useDomainIDEnvVar
            token node:type = "isaacsim.ros2.bridge.ROS2Context"
            int node:typeVersion = 2
            custom uint64 outputs:context
        }

        def OmniGraphNode "ReadSimTime"
        {
            custom bool inputs:resetOnStop = 0
            custom int64 inputs:swhFrameNumber
            token node:type = "isaacsim.core.nodes.IsaacReadSimulationTime"
            int node:typeVersion = 1
            custom double outputs:simulationTime
        }

        def OmniGraphNode "PublisherJointState"
        {
            custom uint64 inputs:context
            uint64 inputs:context.connect = </Root/ROS_JointStates/Context.outputs:context>
            custom uint inputs:execIn (
                customData = {
                    bool isExecution = 1
                }
            )
            uint inputs:execIn.connect = </Root/ROS_JointStates/OnPlaybackTick.outputs:tick>
            custom string inputs:nodeNamespace = ""
            custom string inputs:qosProfile
            custom uint64 inputs:queueSize
            custom rel inputs:targetPrim = </SOARM100> (
                customData = {
                    dictionary omni = {
                        dictionary graph = {
                            string relType = "target"
                        }
                    }
                }
            )
            custom double inputs:timeStamp
            double inputs:timeStamp.connect = </Root/ROS_JointStates/ReadSimTime.outputs:simulationTime>
            custom string inputs:topicName = "/isaac_joint_states"
            token node:type = "isaacsim.ros2.bridge.ROS2PublishJointState"
            int node:typeVersion = 1
        }

        def OmniGraphNode "SubscriberJointState"
        {
            custom uint64 inputs:context
            uint64 inputs:context.connect = </Root/ROS_JointStates/Context.outputs:context>
            custom uint inputs:execIn (
                customData = {
                    bool isExecution = 1
                }
            )
            uint inputs:execIn.connect = </Root/ROS_JointStates/OnPlaybackTick.outputs:tick>
            custom string inputs:nodeNamespace = ""
            custom string inputs:qosProfile
            custom uint64 inputs:queueSize
            custom string inputs:topicName = "/isaac_joint_commands"
            token node:type = "isaacsim.ros2.bridge.ROS2SubscribeJointState"
            int node:typeVersion = 2
            custom double[] outputs:effortCommand
            custom uint outputs:execOut (
                customData = {
                    bool isExecution = 1
                }
            )
            custom token[] outputs:jointNames
            custom double[] outputs:positionCommand
            custom double outputs:timeStamp
            custom double[] outputs:velocityCommand
        }

        def OmniGraphNode "ArticulationController"
        {
            custom double[] inputs:effortCommand
            double[] inputs:effortCommand.connect = </Root/ROS_JointStates/SubscriberJointState.outputs:effortCommand>
            custom uint inputs:execIn (
                customData = {
                    bool isExecution = 1
                }
            )
            uint inputs:execIn.connect = </Root/ROS_JointStates/OnPlaybackTick.outputs:tick>
            custom int[] inputs:jointIndices
            custom token[] inputs:jointNames
            token[] inputs:jointNames.connect = </Root/ROS_JointStates/SubscriberJointState.outputs:jointNames>
            custom double[] inputs:positionCommand
            double[] inputs:positionCommand.connect = </Root/ROS_JointStates/SubscriberJointState.outputs:positionCommand>
            custom string inputs:robotPath
            custom rel inputs:targetPrim = </SOARM100> (
                customData = {
                    dictionary omni = {
                        dictionary graph = {
                            string relType = "target"
                        }
                    }
                }
            )
            custom double[] inputs:velocityCommand
            double[] inputs:velocityCommand.connect = </Root/ROS_JointStates/SubscriberJointState.outputs:velocityCommand>
            token node:type = "isaacsim.core.nodes.IsaacArticulationController"
            int node:typeVersion = 1
        }
    }
}

